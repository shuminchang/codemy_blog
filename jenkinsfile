pipeline {
    agent any

    environment {
        VENV_DIR = '/var/lib/jenkins/envs/venv'
        PIP = "${VENV_DIR}/bin/pip"
        PYTHON = "${VENV_DIR}/bin/python"
    }

    stages {
        stage('Setup') {
            steps {
                script {
                    // Clean the workspace
                    cleanWs()
                }
            }
        }

        stage('Checkout') {
            steps {
                // Checkout the code from your repository
                git branch: 'dev', url: 'https://github.com/shuminchang/codemy_blog.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    sh """
                    ${PIP} install --upgrade pip
                    ${PIP} install -r requirements.txt
                    """
                }
            }
        }

        stage('Run Server') {
            steps {
                script {
                    // Ensure the port is not already in use
                    sh """
                    if lsof -i:8002; then
                        echo "Port 8002 is already in use. Exiting."
                        exit 1
                    fi
                    """
                    // Start the Django development server in the background
                    sh """
                    ${PYTHON} manage.py runserver 8002 > server_log.txt 2>&1 &
                    echo \$! > server_pid.txt
                    """
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Give the server some time to start
                    sleep 10

                    // Check if the server started correctly
                    def server_pid = readFile('server_pid.txt').trim()
                    if (!sh(returnStatus: true, script: "ps -p ${server_pid}")) {
                        echo "Django server failed to start. Check server_log.txt for details."
                        sh 'cat server_log.txt'
                        error "Django server failed to start."
                    }

                    // Run tests
                    sh "${PYTHON} manage.py test"
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    // Terminate the Django development server if it's running
                    def server_pid = readFile('server_pid.txt').trim()
                    sh """
                    if ps -p ${server_pid} > /dev/null; then
                        kill ${server_pid}
                    fi
                    """
                }
            }
        }
    }

    post {
        always {
            // Archive the test results and server log
            archiveArtifacts artifacts: 'server_log.txt', allowEmptyArchive: true
        }
        cleanup {
            // Clean the workspace after the build
            cleanWs()
        }
    }
}
